---
import { PortableText } from "@portabletext/react";
import { Image } from "astro:assets";
import { getLangFromUrl, useTranslations } from "../utils/i18n";

const year = new Date().getFullYear();
const { data } = Astro.props;
const locale = getLangFromUrl(Astro.url);
const t = useTranslations(locale);
---

<footer class="mt-40 bg-neutral-200/50 pt-12 pb-4 md:mt-48 md:pb-6">
  <div
    class="container mx-auto grid gap-x-6 gap-y-16 px-4 md:px-6 lg:grid-cols-2"
  >
    <div
      class="grid items-center justify-between gap-6 sm:grid-cols-2 lg:flex lg:flex-col lg:items-start"
    >
      <a href="/" class="transition-opacity hover:opacity-80">
        <Image
          src="/Logo_swiss_subnet.svg"
          width={100}
          height={100}
          alt="Logo"
          class="w-36 md:w-40 lg:w-44"
        />
      </a>
      <a
        href="https://dashboard.internetcomputer.org/"
        target="_blank"
        class="transition-opacity hover:opacity-80"
      >
        <Image
          src="/icp.svg"
          width={100}
          height={100}
          alt="Logo"
          class="w-48"
        />
      </a>
    </div>
    <div class="flex flex-col justify-between gap-6">
      <div class="grid w-full grow gap-x-6 gap-y-12 sm:grid-cols-3">
        {
          data?.links && (
            <div class="flex flex-col">
              <span class="mono mb-2"> {t("footer.links")}</span>
              <div class="flex flex-col text-lg">
                {data.links?.map(
                  (item: {
                    title: string;
                    link: { language: string; slug: { current: string } };
                  }) => (
                    <a
                      href={`/${item?.link?.language ?? "en"}/${item?.link?.slug?.current}`}
                      class="transition-opacity hover:opacity-60"
                    >
                      {item?.title}
                    </a>
                  ),
                )}
              </div>
            </div>
          )
        }
        {
          data?.text && (
            <div class="flex flex-col">
              <span class="mono mb-2"> {t("footer.contact")}</span>
              <div class="footer-text text-lg">
                <PortableText value={data.text} />
              </div>
            </div>
          )
        }
        {
          data?.socialLinks && (
            <div class="flex flex-col">
              <span class="mono mb-2"> {t("footer.links")}</span>
              <div class="flex flex-col text-lg">
                {data.socialLinks?.map(
                  (item: { title: string; link: string }) => (
                    <a
                      href={item?.link}
                      target="_blank"
                      rel="noreferrer"
                      class="transition-opacity hover:opacity-60"
                    >
                      {item?.title}
                      <span class="">↗</span>
                    </a>
                  ),
                )}
              </div>
            </div>
          )
        }
      </div>
      <span class="text-sm"
        >©{year} Swiss Subnet AG. {t("footer.copyright")}</span
      >
    </div>
  </div>
</footer>
