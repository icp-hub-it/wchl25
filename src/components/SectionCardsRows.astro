---
import { PortableText } from "astro-portabletext";
import Link from "./Link.astro";
import { AsciiText } from "./AsciiText";

const { data } = Astro.props;
---

<section class="">
  <div class="container mx-auto grid gap-6 px-4 md:px-6 lg:grid-cols-2">
    <div class="">
      <div class="sticky top-20 flex flex-col items-start gap-4">
        {data.title && <h3 class="mono">{data.title}</h3>}
        {data.headline && <h4 class="t-2 max-w-xl">{data.headline}</h4>}
        {
          data.text && (
            <div class="max-w-sm">
              <PortableText value={data?.text} />
            </div>
          )
        }
        {data.link && <Link link={data.link} />}
      </div>
    </div>
    <div class="grid">
      {
        data.items.map(
          (
            item: {
              iconText: { code: string };
              title: string;
              text: any;
            },
            index: number,
          ) => (
            <div
              class={`${item.iconText ? "grid gap-12 sm:grid-cols-2 sm:gap-6" : ""} sticky top-20 border-t-2 border-black bg-white py-6`}
            >
              {item.iconText && (
                <div class="code text-[.6rem] leading-[1]">
                  {/* <code>{item.iconText?.code}</code> */}
                  <AsciiText
                    classes="text-[.6rem] leading-[1]"
                    data={item.iconText}
                    client:only
                    delay={100}
                  />
                </div>
              )}
              <div
                class={`${item.iconText ? "" : "grid gap-4 sm:grid-cols-2 sm:gap-6"}`}
              >
                <div>
                  <span class="mono flex items-center gap-2">
                    <span class="bg-primary block h-2 w-2" />
                    {(index + 1).toLocaleString("en-US", {
                      minimumIntegerDigits: 2,
                      useGrouping: false,
                    })}
                  </span>
                  <h3 class="t-3 mt-2">{item.title}</h3>
                </div>
                <div class="mt-4">
                  <PortableText value={item.text} />
                </div>
              </div>
            </div>
          ),
        )
      }
    </div>
  </div>
</section>
